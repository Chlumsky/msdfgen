name: Build MSDFGEN

on:
  push:
    branches:
      - master

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgArguments: freetype tinyxml2 libpng
          vcpkgTriplet: x64-windows
          vcpkgDirectory: '${{ github.workspace }}/vcpkg' # Ensure vcpkg is in a known path

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DMSDFGEN_BUILD_STANDALONE=ON \
          -DMSDFGEN_USE_VCPKG=ON \
          -A x64 \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=${{ github.workspace }}/build/windows/x64
        shell: pwsh

      - name: Build
        run: cmake --build build --config Release
        shell: pwsh

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v4
        with:
          name: msdfgen-windows
          path: ${{ github.workspace }}/build/windows/x64/msdfgen.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgArguments: freetype tinyxml2 libpng
          vcpkgTriplet: x64-linux
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DMSDFGEN_BUILD_STANDALONE=ON \
          -DMSDFGEN_USE_VCPKG=ON \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{ github.workspace }}/build/linux/x64

      - name: Build
        run: cmake --build build --config Release

      - name: Upload Linux Executable
        uses: actions/upload-artifact@v4
        with:
          name: msdfgen-linux
          path: ${{ github.workspace }}/build/linux/x64/msdfgen

  build-macos-x64:
    runs-on: macos-latest # x64 runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgArguments: freetype tinyxml2 libpng
          vcpkgTriplet: x64-osx
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DMSDFGEN_BUILD_STANDALONE=ON \
          -DMSDFGEN_USE_VCPKG=ON \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{ github.workspace }}/build/macos/x64

      - name: Build
        run: cmake --build build --config Release

      - name: Upload macOS x64 Executable
        uses: actions/upload-artifact@v4
        with:
          name: msdfgen-macos-x64
          path: ${{ github.workspace }}/build/macos/x64/msdfgen

  build-macos-arm64:
    runs-on: macos-14 # Apple Silicon (ARM64) runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgArguments: freetype tinyxml2 libpng
          vcpkgTriplet: arm64-osx
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DMSDFGEN_BUILD_STANDALONE=ON \
          -DMSDFGEN_USE_VCPKG=ON \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{ github.workspace }}/build/macos/arm64

      - name: Build
        run: cmake --build build --config Release

      - name: Upload macOS ARM64 Executable
        uses: actions/upload-artifact@v4
        with:
          name: msdfgen-macos-arm64
          path: ${{ github.workspace }}/build/macos/arm64/msdfgen